[versions]
kotlin = "1.9.10"

kotlinxCoroutines = "1.7.3"
kotlinxSerialization = "1.6.0"


junit = "5.9.1"
kotlinTest = "5.5.4"
mockk = "1.13.5"
assertj = "3.22.0"

logback = "1.4.5"
slf4j = "2.0.5"

chapi = "2.1.3"
archguard = "2.0.7"
codedb = "0.1.2"

gson = "2.10.1"
shadowJar = "8.1.1"


jgit = "6.7.0.202309050840-r"

cf = "0.4.0"

[libraries]
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-jdk8", version.ref = "kotlin" }

kotlin-scripting-jvm = { group = "org.jetbrains.kotlin", name = "kotlin-scripting-jvm", version.ref = "kotlin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
reflections = { group = "org.reflections", name = "reflections", version = "0.10.2" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }

dataframe = { group = "org.jetbrains.kotlinx", name = "dataframe", version = "0.11.1" }

# Kotlinx Serialization
serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

# Coroutines
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }


# Testing
test-junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
test-junit-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit" }
test-junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
test-kotlintest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotlinTest" }
test-mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
test-assertj = { group = "org.assertj", name = "assertj-core", version.ref = "assertj" }

# Logging
logging-slf4j-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
logging-logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }

# chapi
chapi-domain = { group = "com.phodal.chapi", name = "chapi-domain", version.ref = "chapi" }
chapi-java = { group = "com.phodal.chapi", name = "chapi-ast-java", version.ref = "chapi" }
chapi-kotlin = { group = "com.phodal.chapi", name = "chapi-ast-kotlin", version.ref = "chapi" }

# archguard
# implementation("org.archguard.aaac:lang:2.0.0-beta.5")
archguard-scanner-core = { group = "org.archguard.scanner", name = "scanner_core", version.ref = "archguard" }
archguard-dsl = { group = "org.archguard.aaac", name = "dsl", version.ref = "archguard" }
archguard-analyser-sca = { group = "org.archguard.scanner", name = "analyser_sca", version.ref = "archguard" }
## analyser_diff_changes
archguard-analyser-diffChanges = { group = "org.archguard.scanner", name = "analyser_diff_changes", version.ref = "archguard" }
archguard-lang-kotlin = { group = "org.archguard.scanner", name = "lang_kotlin", version.ref = "archguard" }
archguard-lang-java = { group = "org.archguard.scanner", name = "lang_java", version.ref = "archguard" }
archguard-lang-python = { group = "org.archguard.scanner", name = "lang_python", version.ref = "archguard" }
archguard-lang-typescript = { group = "org.archguard.scanner", name = "lang_typescript", version.ref = "archguard" }
archguard-lang-golang = { group = "org.archguard.scanner", name = "lang_golang", version.ref = "archguard" }

archguard-feat-apicalls = { group = "org.archguard.scanner", name = "feat_apicalls", version.ref = "archguard" }
archguard-feat-datamap = { group = "org.archguard.scanner", name = "feat_datamap", version.ref = "archguard" }
codedb-checkout = { group = "org.archguard.codedb", name = "checkout", version.ref = "codedb" }

gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

# llm part
commonmark-core = "org.commonmark:commonmark:0.21.0"
commonmark-gfm-tables = "org.commonmark:commonmark-ext-gfm-tables:0.21.0"
commonmark-heading-anchor = "org.commonmark:commonmark-ext-gfm-tables:0.21.0"

openai-gpt3 = "com.theokanning.openai-gpt3-java:service:0.14.0"
retrofit2-converter-jackson = "com.squareup.retrofit2:converter-jackson:2.9.0"
azure-openai = "com.azure:azure-ai-openai:1.0.0-beta.3"

kaml = "com.charleskorn.kaml:kaml:0.55.0"

github-api = "org.kohsuke:github-api:1.314"
gitlab4j-api = "org.gitlab4j:gitlab4j-api:5.3.0"

jackson-module-kotlin = "com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2"
jackson-module-jsonSchema = "com.fasterxml.jackson.module:jackson-module-jsonSchema:2.14.2"
jackson-dataformat-yaml = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2"
jackson-databind = "com.fasterxml.jackson.core:jackson-databind:2.14.2"


rxjava3 = "io.reactivex.rxjava3:rxjava:3.1.7"

kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.1"
clikt = "com.github.ajalt.clikt:clikt:4.2.0"

jgit = { group = "org.eclipse.jgit", name = "org.eclipse.jgit", version.ref = "jgit" }

# implementation(libs.cocoaCore)
cf-cocoa-core = { group = "cc.unitmesh", name = "cocoa-core", version.ref = "cf" }
#     implementation(libs.codeModules.gitDiffer)
cf-sentence-transformers = { group = "cc.unitmesh", name = "sentence-transformers", version.ref="cf" }
#    implementation(libs.codedb.checkout)
#    implementation(libs.archguard.analyser.diffChanges)



[plugins]
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadowJar" }

[bundles]
test = ["test-junit-params", "kotlin-test", "test-kotlintest-assertions", "test-mockk", "test-assertj"]

jackson = ["jackson-module-jsonSchema", "jackson-module-kotlin", "jackson-dataformat-yaml"]
